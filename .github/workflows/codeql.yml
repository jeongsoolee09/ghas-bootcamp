# ===== Definition of workflow called CodeQL =====
name: CodeQL

# ===== Conditions on which event the jobs should run. =====
on:                       # trigger events
  push:                   # on pushes
    branches: [ "main" ]  # on push to main branch
  pull_request:           # on pull requests
    branches: [ "main" ]  # on pull request to the main branch. Mush be a subset of the branches of push
  schedule:               # on the scheduled times
    - cron: '35 6 * * 2'  # cron schedule (contains special character *, so we need to single-quote it.)

# ===== actions: what to do. =====
jobs:  # the actions.
  analyze:                    # a job called `analyze`.
    name: Analyze             # the name that appears on the Web UI.
    runs-on: ubuntu-latest    # runner configuration.
    # ===== permissions granted to `Analyze` job. =====
    permissions:              # all of others that don't appear here are set to `none`.
      actions: read           # actions of the repo: artifacts, runs, workflows, environments, jobs, etc.
      contents: read          # contents the repo: branches, comments, commits, pulls, releases, codeql databases, etc.
      security-events: write  # security related info: code scanning results, dependabot alerts, secret scanning results, etc.

      # Full information for each keys can be found in the REST API documentation: https://docs.github.com/en/rest/overview/permissions-required-for-fine-grained-personal-access-tokens?apiVersion=2022-11-28#about-permissions-required-for-fine-grained-personal-access-token

    # ===== strategy for matrix testing =====
    strategy:                 # strategy definition.
      fail-fast: false        # disable breaking out of the loop over matrix if one fails.
      matrix:                 # matrix definition
        language: [ 'go', 'java', 'javascript', 'python' ] # language key

    # ===== steps for the job `analyze`. =====
    steps:  # order matters: it should reflect dependencies across different steps (it's done sequentially).

    # ===== Step 1: `Checkout repository` =====
    - name: Checkout repository   # the name that appears on the Web UI. 
      uses: actions/checkout@v3   # github.com/actions/checkout, version 3 (checks out the current repo)

    # ===== Step 2: `Initialize CodeQL` =====
    - name: Initialize CodeQL            # the name that appears on the Web UI. 
      uses: github/codeql-action/init@v2 # github.com/github/codeql-action/init, version 2
      with:                                 # options are found in the actions repository.
        languages: ${{ matrix.language }}   # the `language` property of the `matrix` context, as defined in the strategy dictionary.
        config-file: ./.github/codeql/codeql-config.yml

    # ===== Step 3: `Set up JDK 16` =====
    - if: matrix.language == 'java' # conditionally run, if the current run's language is java
      name: Set up JDK 16           # the name that appears on the Web UI.
      uses: actions/setup-java@v3   # github.com/actions/setup-java, version 3
      # ===== options for this step: `Set up JDK 16`. =====
      with:                         # options are found in the actions repository.
        java-version: 16            # java version to set.
        distribution: microsoft     # distributor to set.

    # ===== Step 4: `Autobuild` =====
    - if: matrix.language == 'java'            # conditionally run, if the current run's language is java
      name: Autobuild                          # the name that appears on the Web UI.
      uses: github/codeql-action/autobuild@v2  # github.com/github/codeql-action, autobuild action

    # ===== Step 5: `Perform CodeQL Analysis`
    - name: Perform CodeQL Analysis            # the name that appears on the Web UI.
      uses: github/codeql-action/analyze@v2    # github.com/github/codeql-action, analyze action
      with:                                    # options are found in the actions repository.
        # ===== A custom category name for each analysis run. =====
        category: "/language:${{ matrix.language }}" # the `language` property of the `matrix` context, as defined in the strategy dictionary.